[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8888


[app:main]
use = egg:kinto

#
# Features
#
# kinto.readonly = false
# kinto.paginate_by = 0
# kinto.experimental_collection_schema_validation = true
# kinto.experimental_permissions_endpoint = true
# kinto.trailing_slash_redirect_enabled = true
# kinto.batch_max_requests = 25
# kinto.flush_endpoint_enabled = false

#
# Production settings
#
# http://kinto.readthedocs.io/en/latest/configuration/production.html
#
# kinto.http_scheme = https
# kinto.http_host = kinto.services.mozilla.com

# kinto.statsd_url = udp://localhost:8125
# kinto.statsd_prefix = kinto-prod

# kinto.retry_after_seconds = 5
# kinto.backoff = 10
# kinto.eos =


#
# Backends.
#
# http://kinto.readthedocs.io/en/latest/configuration/settings.html#storage
#
kinto.storage_backend = kinto.core.storage.postgresql
kinto.storage_url = postgres://admin:pass@localhost/dbname
# kinto.storage_pool_size = 25
# kinto.storage_max_overflow = 5
# kinto.storage_pool_recycle = -1
# kinto.storage_pool_timeout = 30
# kinto.storage_max_backlog = -1

kinto.cache_backend = kinto.core.cache.postgresql
kinto.cache_url = postgres://admin:pass@localhost/dbname
# kinto.cache_pool_size = 25
# kinto.cache_max_overflow = 5
# kinto.cache_pool_recycle = -1
# kinto.cache_pool_timeout = 30
# kinto.cache_max_backlog = -1

kinto.permission_backend = kinto.core.permission.postgresql
kinto.permission_url = postgres://admin:pass@localhost/dbname
# kinto.permission_pool_size = 25
# kinto.permission_max_overflow = 5
# kinto.permission_pool_recycle = -1
# kinto.permission_pool_timeout = 30
# kinto.permission_max_backlog = -1


#
# Auth configuration.
#
# http://kinto.readthedocs.io/en/latest/configuration/settings.html#authentication
#
kinto.userid_hmac_secret = b'58de20af8811f56f52d24a6862d13c163b0ea353b0e2f23ea34aaccbef174ec8'

# Firefox accounts
# multiauth.policies = fxa basicauth
# fxa-oauth.relier.enabled = false
# fxa-oauth.client_id = 89513028159972bc
# fxa-oauth.client_secret = 9aced230585cc0aaea0a3467dd800
# fxa-oauth.oauth_uri = https://oauth-stable.dev.lcip.org
# fxa-oauth.requested_scope = profile kinto
# fxa-oauth.required_scope = kinto
# fxa-oauth.webapp.authorized_domains = *.firefox.com
# fxa-oauth.cache_ttl_seconds = 300
# fxa-oauth.state.ttl_seconds = 3600

# LDAP
# multiauth.policies = ldap
# multiauth.policy.ldap.use = kinto_ldap.authentication.LDAPBasicAuthAuthenticationPolicy
# ldap.cache_ttl_seconds = 30
# ldap.endpoint = ldap://ldap.prod.mozaws.net
# ldap.fqn = "uid={uid},ou=users,dc=mozilla"

#
# Root permissions
#
# kinto.bucket_create_principals = system.Authenticated
# kinto.bucket_read_principals = system.Authenticated


#
# Client cache headers
#
# http://kinto.readthedocs.io/en/latest/configuration/settings.html#client-caching
#
# Every bucket objects objects and list
# kinto.bucket_cache_expires_seconds = 3600
#
# Every collection objects and list of every buckets
# kinto.collection_cache_expires_seconds = 3600
#
# Every group objects and list of every buckets
# kinto.group_cache_expires_seconds = 3600
#
# Every records objects and list of every collections
# kinto.record_cache_expires_seconds = 3600
#
# Records in a specific bucket
# kinto.blog_record_cache_expires_seconds = 3600
#
# Records in a specific collection in a specific bucket
# kinto.blog_article_record_cache_expires_seconds = 3600


#
# Plugins
#
kinto.includes = kinto.plugins.default_bucket
#                kinto.plugins.history
                 kinto_changes
                 kinto_attachment
                 kinto_amo
                 kinto_admin
                 kinto_signer
                 kinto_ldap
#                kinto.plugins.quotas

#
# Kinto changes
#
kinto.event_listeners = changes
kinto.event_listeners.changes.use = kinto_changes.listener
kinto.event_listeners.changes.collections = /buckets/blocklists
                                            /buckets/destination/collections/destination
# kinto.event_listeners.changes.bucket = monitor
# kinto.event_listeners.changes.collection = changes
# kinto.event_listeners.changes.principals = system.Everyone

#
# Kinto attachment
#
kinto.attachment.base_url = http://localhost:8000
kinto.attachment.folder = {bucket_id}/{collection_id}
# Either local filesystem:
kinto.attachment.base_path = /tmp
# or Amazon S3:
# kinto.attachment.aws.access_key = <AWS access key>
# kinto.attachment.aws.secret_key = <AWS secret key>
# kinto.attachment.aws.bucket_name = <AWS bucket name>
# kinto.attachment.aws.acl = public-read

#
# Kinto signer
#
kinto.signer.resources = /buckets/source/collections/source;/buckets/destination/collections/destination
                         /buckets/staging/collections/addons;/buckets/blocklists/collections/addons
                         /buckets/staging/collections/plugins;/buckets/blocklists/collections/plugins
                         /buckets/staging/collections/gfx;/buckets/blocklists/collections/gfx
                         /buckets/staging/collections/certificates;/buckets/blocklists/collections/certificates

kinto.signer.signer_backend = kinto_signer.signer.autograph
kinto.signer.autograph.hawk_id = alice
kinto.signer.autograph.hawk_secret = fs5wgcer9qj819kfptdlp8gm227ewxnzvsuj9ztycsx08hfhzu
kinto.signer.autograph.server_url = http://localhost:8000

#
# Kinto AMO (addons XML)
#
# Data is read from the signed collection.
#
kinto.amo.addons = /buckets/blocklists/collections/addons
kinto.amo.plugins = /buckets/blocklists/collections/plugins
kinto.amo.gfx = /buckets/blocklists/collections/gfx
kinto.amo.certificates = /buckets/blocklists/collections/certificates



[uwsgi]
wsgi-file = app.wsgi
enable-threads = true
# socket = /var/run/uwsgi/kinto.sock
socket = /tmp/kinto.sock
chmod-socket = 666
processes =  3
master = true
module = kinto
harakiri = 120
uid = kinto
gid = kinto
# virtualenv = /path/to/.venv
lazy = true
lazy-apps = true
single-interpreter = true
buffer-size = 65535
post-buffering = 65535
plugin = python

#
# Logging configuration
#
kinto.logging_renderer = kinto.core.logs.MozillaHekaRenderer

[loggers]
# keys = root, sentry
keys = root

[handlers]
keys = console, sentry

[formatters]
keys = heka, generic

[logger_root]
level = INFO
handlers = console, sentry
formatter = heka

[logger_sentry]
level = WARN
handlers = console
qualname = sentry.errors
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ('https://<key>:<secret>@app.getsentry.com/<project>',)
level = WARNING
formatter = generic

[formatter_heka]
format = %(message)s

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
